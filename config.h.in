// config.h generated by configure
#pragma once

// Define to the one symbol short name of this package.
#define @PKG_UNAME@_NAME	"@PKG_NAME@"
// Define to the version of this package.
#define @PKG_UNAME@_VERSION	@PKG_VERSION@
// Define to the version string of this package.
#define @PKG_UNAME@_VERSTRING	"@PKG_VERSTR@"
// Define to the address where bug reports for this package should be sent.
#define @PKG_UNAME@_BUGREPORT	"@PKG_BUGREPORT@"

// Define to 1 if you have uSTL (http://sourceforge.net/projects/ustl)
#define HAVE_USTL_H 1
#if HAVE_USTL_H
    #include <ustl.h>
    using namespace ustl;
#else
    #include <vector>
    #include <stdint.h>
    #include <string.h>
    #include <stdlib.h>
    using namespace std;

    /// Returns the number of elements in a static vector
    template <typename T, size_t N> inline size_t VectorSize (T(&)[N]) { return (N); }
    template <typename T> inline size_t VectorSize (T(&)[0]) { return (0); }
    /// Rounds \p n up to be divisible by \p grain
    template <typename T> inline T Align (T n, size_t grain = 4) { n += grain - 1; return (n - n % grain); }
    /// Shorthand for container iteration.
    #define foreach(type,i,ctr)	for (type i = (ctr).begin(); i < (ctr).end(); ++i)
#endif
#include <stdio.h>
